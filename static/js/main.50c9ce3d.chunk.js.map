{"version":3,"sources":["components/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","props","className","style","fontSize","title","ingredients","map","ingredient","text","calories","src","image","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","spanStyle","display","justifyContent","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","recipe","index","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAoBeA,EAjBA,SAACC,GAId,OACE,sBAAKC,UAAU,aAAf,UACE,+BAAI,sBAAMC,MALI,CAChBC,SAAS,QAIH,0BAAkCH,EAAMI,MAAM,4BAClD,6BACGJ,EAAMK,YAAYC,KAAI,SAACC,GAAD,OACrB,6BAAKA,EAAWC,YAGpB,4CAAeR,EAAMS,YACrB,qBAAKC,IAAKV,EAAMW,MAAOC,IAAKZ,EAAMI,YCgEzBS,EA3EH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,WAPnB,mBAOTK,EAPS,KAOFC,EAPE,KAUhBC,qBAAU,WACRC,MACC,CAACH,IAGJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OACSL,EADT,mBAdf,WAce,oBAbd,qCAYG,cACXM,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAMjBX,EAAWW,EAAKC,MANC,2CAAH,qDAwBVC,EAAY,CAChB1B,SAAS,QAGX,OACE,sBAAKF,UAAU,MAAf,UACE,qBAAIC,MAXO,CACb4B,QAAS,OACTC,eAAe,UASb,UAAmB,sBAAM7B,MAAO2B,EAAb,8FAAnB,gBAAuG,sBAAM3B,MAAO2B,EAAb,iGACvG,uBAAM5B,UAAU,cAAc+B,SAjBhB,SAACC,GACjBA,EAAMC,iBACNd,EAASH,GACTC,EAAU,KAcR,UACE,uBACEiB,KAAK,OACLC,YAAY,uCACZnC,UAAU,aACVoC,MAAOpB,EACPqB,SA3Ba,SAACL,GACpBf,EAAUe,EAAMM,OAAOF,UA4BnB,wBAAQF,KAAK,SAASlC,UAAU,gBAAhC,uBAKF,qBAAKA,UAAU,UAAf,SACGc,EAAQT,KAAI,SAACkC,EAAQC,GAAT,OACX,cAAC,EAAD,CACErC,MAAOoC,EAAOA,OAAOE,MACrBjC,SAAU+B,EAAOA,OAAO/B,SACxBE,MAAO6B,EAAOA,OAAO7B,MACrBN,YAAamC,EAAOA,OAAOnC,aACtBmC,EAAOA,OAAOE,gBC3DhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.50c9ce3d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Recipe.css'\r\n\r\nconst Recipe = (props) => {\r\n  const spanStyle = {\r\n    fontSize:\"20px\"\r\n  }\r\n  return (\r\n    <div className=\"cardRecipe\">\r\n      <h2><span style={spanStyle}>🥄</span>{props.title}<span></span></h2>\r\n      <ol>\r\n        {props.ingredients.map((ingredient) => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ol>\r\n      <p>Calories : {props.calories}</p>\r\n      <img src={props.image} alt={props.title} />\r\n    </div>\r\n  );\r\n};\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Recipe from \"./components/Recipe\";\n// import InputComponent from \"./components/InputComponent\";\n\nconst App = () => {\n  // Authenticate API --> Use Environment Tools to protect the APP_ID and APP_KEY :)\n  const APP_ID = \"0a558300\";\n  const APP_KEY = \"181f226856b2e1b79a5770bcf412a99a\";\n  // ***********************State Updating**********************\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  // ***********************************************************\n  //We need useEffect() while working with API in react function component\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n  // ***********************************************************\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    // console.log(data.hits); //hits has all the recipes\n    setRecipes(data.hits); // data go to reciepes\n  };\n  // ***********************EventHandler************************\n\n  const updateSearch = (event) => {\n    setSearch(event.target.value); //\"search\" will get this e.target.value\n    // console.log(search);\n  };\n  const getSearch = (event) => {\n    event.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n  const styles = {\n    display: \"flex\",\n    justifyContent:\"center\",\n    // color:\"white\"\n  };\n  const spanStyle = {\n    fontSize:\"20px\"\n  }\n  // ***********************************************************\n  return (\n    <div className=\"App\">\n      <h1 style={styles}><span style={spanStyle}>🥑&nbsp;🍓&nbsp;🍬&nbsp;🍹&nbsp;🍪&nbsp;</span>Foodie Friday<span style={spanStyle}>&nbsp;🍰&nbsp;🍩&nbsp;🍄&nbsp;🍦&nbsp;🍉</span></h1>\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input\n          type=\"text\"\n          placeholder=\"🍽 Type Something Yummy ! \"\n          className=\"search-bar\"\n          value={search}\n          onChange={updateSearch}\n        ></input>\n        <button type=\"submit\" className=\"search-button\">\n          Search\n        </button>\n      </form>\n      {/* List of Recipe components : */}\n      <div className=\"recipes\">\n        {recipes.map((recipe, index) => (\n          <Recipe\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            key={recipe.recipe.label}\n            // key should be something unique that's why I used \"label\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}